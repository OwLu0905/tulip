---
import Title from "./Title.astro";

const baseUrl = import.meta.env.BASE_URL;
---

<header class="relative w-full border-b border-primary/20">
  <nav
    class="z-[20] flex w-full items-center bg-background px-4 backdrop-blur-lg transition-[padding] duration-500 ease-in-out lg:px-20"
  >
    <div class="text-2xl tracking-wide">
      <a href={`${baseUrl}`}>
        <Title title={"Tulip"} />
      </a>
    </div>
    <ul
      class="ml-auto flex gap-2 text-sm lg:text-base [&>li]:w-16 [&>li]:px-4 [&>li]:py-6 [&>li]:text-center lg:[&>li]:w-28"
    >
      <li>
        <a href={`${baseUrl}`}> Home</a>
      </li>

      <li>
        <a href="https://github.com/OwLu0905/tulip" target="_blank"> Github </a>
      </li>

      <li>
        <button id="mode-theme">Mode</button>
      </li>
    </ul>
  </nav>
</header>

<script is:inline>
  document.addEventListener("astro:page-load", () => {
    const theme = (() => {
      if (
        typeof localStorage !== "undefined" &&
        localStorage.getItem("theme")
      ) {
        return localStorage.getItem("theme");
      }
      if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
        return "dark";
      }
      return "light";
    })();

    if (theme === "light") {
      document.documentElement.classList.remove("dark");
    } else {
      document.documentElement.classList.add("dark");
    }

    window.localStorage.setItem("theme", theme);

    const handleToggleClick = () => {
      const element = document.documentElement;
      element.classList.toggle("dark");

      const isDark = element.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    };

    document.getElementById("mode-theme").onclick = handleToggleClick;
  });
</script>

<script>
  const headerEle = document.querySelector("header");
  const navEle = document.querySelector("nav");

  function stickyNav(entries: IntersectionObserverEntry[]) {
    const entry = entries[0];

    if (!entry.isIntersecting) {
      console.log("??");
      navEle?.classList.add("fixed");
      navEle?.classList.add("top-0");
      navEle?.classList.add("bg-background/60");
      navEle?.classList.remove("bg-background");
      navEle?.classList.remove("relative");

      navEle?.classList.remove("px-20");
      navEle?.classList.add("px-28");
      navEle?.classList.add("shadow-lg");
    } else {
      navEle?.classList.remove("fixed");
      navEle?.classList.remove("top-0");
      navEle?.classList.remove("bg-background/60");
      navEle?.classList.add("bg-background");
      navEle?.classList.add("relative");
      navEle?.classList.add("px-20");
      navEle?.classList.remove("px-28");

      navEle?.classList.remove("shadow-lg");
    }
  }

  if (headerEle && navEle) {
    const scrollHeight = headerEle?.getBoundingClientRect().height || 100;

    const navObserverOption = {
      root: null,
      rootMargin: `${scrollHeight + 4}px`,
      threshold: 0.0,
    };

    const headerObserver = new IntersectionObserver(
      stickyNav,
      navObserverOption,
    );

    if (headerEle) {
      headerObserver.observe(headerEle);
    }
  }
</script>

<script is:inline>
  function applyTheme() {
    localStorage.theme === "dark"
      ? document.documentElement.classList.add("dark")
      : document.documentElement.classList.remove("dark");
  }

  document.addEventListener("astro:after-swap", applyTheme);
  applyTheme();
</script>
